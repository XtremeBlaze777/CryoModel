// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cacti_interface.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cacti_5finterface_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cacti_5finterface_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cacti_5finterface_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cacti_5finterface_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cacti_5finterface_2eproto;
class CactiInput;
class CactiInputDefaultTypeInternal;
extern CactiInputDefaultTypeInternal _CactiInput_default_instance_;
class CactiInput_ConstParameter;
class CactiInput_ConstParameterDefaultTypeInternal;
extern CactiInput_ConstParameterDefaultTypeInternal _CactiInput_ConstParameter_default_instance_;
class CactiInput_TechnologyParameter;
class CactiInput_TechnologyParameterDefaultTypeInternal;
extern CactiInput_TechnologyParameterDefaultTypeInternal _CactiInput_TechnologyParameter_default_instance_;
class CactiInput_TechnologyParameter_DeviceType;
class CactiInput_TechnologyParameter_DeviceTypeDefaultTypeInternal;
extern CactiInput_TechnologyParameter_DeviceTypeDefaultTypeInternal _CactiInput_TechnologyParameter_DeviceType_default_instance_;
class CactiInput_TechnologyParameter_InterconnectType;
class CactiInput_TechnologyParameter_InterconnectTypeDefaultTypeInternal;
extern CactiInput_TechnologyParameter_InterconnectTypeDefaultTypeInternal _CactiInput_TechnologyParameter_InterconnectType_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CactiInput* Arena::CreateMaybeMessage<::CactiInput>(Arena*);
template<> ::CactiInput_ConstParameter* Arena::CreateMaybeMessage<::CactiInput_ConstParameter>(Arena*);
template<> ::CactiInput_TechnologyParameter* Arena::CreateMaybeMessage<::CactiInput_TechnologyParameter>(Arena*);
template<> ::CactiInput_TechnologyParameter_DeviceType* Arena::CreateMaybeMessage<::CactiInput_TechnologyParameter_DeviceType>(Arena*);
template<> ::CactiInput_TechnologyParameter_InterconnectType* Arena::CreateMaybeMessage<::CactiInput_TechnologyParameter_InterconnectType>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CactiInput_TechnologyParameter_DeviceType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CactiInput.TechnologyParameter.DeviceType) */ {
 public:
  inline CactiInput_TechnologyParameter_DeviceType() : CactiInput_TechnologyParameter_DeviceType(nullptr) {};
  virtual ~CactiInput_TechnologyParameter_DeviceType();

  CactiInput_TechnologyParameter_DeviceType(const CactiInput_TechnologyParameter_DeviceType& from);
  CactiInput_TechnologyParameter_DeviceType(CactiInput_TechnologyParameter_DeviceType&& from) noexcept
    : CactiInput_TechnologyParameter_DeviceType() {
    *this = ::std::move(from);
  }

  inline CactiInput_TechnologyParameter_DeviceType& operator=(const CactiInput_TechnologyParameter_DeviceType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CactiInput_TechnologyParameter_DeviceType& operator=(CactiInput_TechnologyParameter_DeviceType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CactiInput_TechnologyParameter_DeviceType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CactiInput_TechnologyParameter_DeviceType* internal_default_instance() {
    return reinterpret_cast<const CactiInput_TechnologyParameter_DeviceType*>(
               &_CactiInput_TechnologyParameter_DeviceType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CactiInput_TechnologyParameter_DeviceType& a, CactiInput_TechnologyParameter_DeviceType& b) {
    a.Swap(&b);
  }
  inline void Swap(CactiInput_TechnologyParameter_DeviceType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CactiInput_TechnologyParameter_DeviceType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CactiInput_TechnologyParameter_DeviceType* New() const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter_DeviceType>(nullptr);
  }

  CactiInput_TechnologyParameter_DeviceType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter_DeviceType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CactiInput_TechnologyParameter_DeviceType& from);
  void MergeFrom(const CactiInput_TechnologyParameter_DeviceType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CactiInput_TechnologyParameter_DeviceType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CactiInput.TechnologyParameter.DeviceType";
  }
  protected:
  explicit CactiInput_TechnologyParameter_DeviceType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cacti_5finterface_2eproto);
    return ::descriptor_table_cacti_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRNchOnFieldNumber = 1,
    kRPchOnFieldNumber = 2,
    kVddFieldNumber = 3,
    kVthFieldNumber = 4,
    kVccMinFieldNumber = 5,
    kIOnNFieldNumber = 6,
    kIOnPFieldNumber = 7,
    kIOffNFieldNumber = 8,
    kIOffPFieldNumber = 9,
    kIGOnNFieldNumber = 10,
    kIGOnPFieldNumber = 11,
    kNToPEffCurrDrvRatioFieldNumber = 12,
  };
  // optional double R_nch_on = 1;
  bool has_r_nch_on() const;
  private:
  bool _internal_has_r_nch_on() const;
  public:
  void clear_r_nch_on();
  double r_nch_on() const;
  void set_r_nch_on(double value);
  private:
  double _internal_r_nch_on() const;
  void _internal_set_r_nch_on(double value);
  public:

  // optional double R_pch_on = 2;
  bool has_r_pch_on() const;
  private:
  bool _internal_has_r_pch_on() const;
  public:
  void clear_r_pch_on();
  double r_pch_on() const;
  void set_r_pch_on(double value);
  private:
  double _internal_r_pch_on() const;
  void _internal_set_r_pch_on(double value);
  public:

  // optional double Vdd = 3;
  bool has_vdd() const;
  private:
  bool _internal_has_vdd() const;
  public:
  void clear_vdd();
  double vdd() const;
  void set_vdd(double value);
  private:
  double _internal_vdd() const;
  void _internal_set_vdd(double value);
  public:

  // optional double Vth = 4;
  bool has_vth() const;
  private:
  bool _internal_has_vth() const;
  public:
  void clear_vth();
  double vth() const;
  void set_vth(double value);
  private:
  double _internal_vth() const;
  void _internal_set_vth(double value);
  public:

  // optional double Vcc_min = 5;
  bool has_vcc_min() const;
  private:
  bool _internal_has_vcc_min() const;
  public:
  void clear_vcc_min();
  double vcc_min() const;
  void set_vcc_min(double value);
  private:
  double _internal_vcc_min() const;
  void _internal_set_vcc_min(double value);
  public:

  // optional double I_on_n = 6;
  bool has_i_on_n() const;
  private:
  bool _internal_has_i_on_n() const;
  public:
  void clear_i_on_n();
  double i_on_n() const;
  void set_i_on_n(double value);
  private:
  double _internal_i_on_n() const;
  void _internal_set_i_on_n(double value);
  public:

  // optional double I_on_p = 7;
  bool has_i_on_p() const;
  private:
  bool _internal_has_i_on_p() const;
  public:
  void clear_i_on_p();
  double i_on_p() const;
  void set_i_on_p(double value);
  private:
  double _internal_i_on_p() const;
  void _internal_set_i_on_p(double value);
  public:

  // optional double I_off_n = 8;
  bool has_i_off_n() const;
  private:
  bool _internal_has_i_off_n() const;
  public:
  void clear_i_off_n();
  double i_off_n() const;
  void set_i_off_n(double value);
  private:
  double _internal_i_off_n() const;
  void _internal_set_i_off_n(double value);
  public:

  // optional double I_off_p = 9;
  bool has_i_off_p() const;
  private:
  bool _internal_has_i_off_p() const;
  public:
  void clear_i_off_p();
  double i_off_p() const;
  void set_i_off_p(double value);
  private:
  double _internal_i_off_p() const;
  void _internal_set_i_off_p(double value);
  public:

  // optional double I_g_on_n = 10;
  bool has_i_g_on_n() const;
  private:
  bool _internal_has_i_g_on_n() const;
  public:
  void clear_i_g_on_n();
  double i_g_on_n() const;
  void set_i_g_on_n(double value);
  private:
  double _internal_i_g_on_n() const;
  void _internal_set_i_g_on_n(double value);
  public:

  // optional double I_g_on_p = 11;
  bool has_i_g_on_p() const;
  private:
  bool _internal_has_i_g_on_p() const;
  public:
  void clear_i_g_on_p();
  double i_g_on_p() const;
  void set_i_g_on_p(double value);
  private:
  double _internal_i_g_on_p() const;
  void _internal_set_i_g_on_p(double value);
  public:

  // optional double n_to_p_eff_curr_drv_ratio = 12;
  bool has_n_to_p_eff_curr_drv_ratio() const;
  private:
  bool _internal_has_n_to_p_eff_curr_drv_ratio() const;
  public:
  void clear_n_to_p_eff_curr_drv_ratio();
  double n_to_p_eff_curr_drv_ratio() const;
  void set_n_to_p_eff_curr_drv_ratio(double value);
  private:
  double _internal_n_to_p_eff_curr_drv_ratio() const;
  void _internal_set_n_to_p_eff_curr_drv_ratio(double value);
  public:

  // @@protoc_insertion_point(class_scope:CactiInput.TechnologyParameter.DeviceType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double r_nch_on_;
  double r_pch_on_;
  double vdd_;
  double vth_;
  double vcc_min_;
  double i_on_n_;
  double i_on_p_;
  double i_off_n_;
  double i_off_p_;
  double i_g_on_n_;
  double i_g_on_p_;
  double n_to_p_eff_curr_drv_ratio_;
  friend struct ::TableStruct_cacti_5finterface_2eproto;
};
// -------------------------------------------------------------------

class CactiInput_TechnologyParameter_InterconnectType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CactiInput.TechnologyParameter.InterconnectType) */ {
 public:
  inline CactiInput_TechnologyParameter_InterconnectType() : CactiInput_TechnologyParameter_InterconnectType(nullptr) {};
  virtual ~CactiInput_TechnologyParameter_InterconnectType();

  CactiInput_TechnologyParameter_InterconnectType(const CactiInput_TechnologyParameter_InterconnectType& from);
  CactiInput_TechnologyParameter_InterconnectType(CactiInput_TechnologyParameter_InterconnectType&& from) noexcept
    : CactiInput_TechnologyParameter_InterconnectType() {
    *this = ::std::move(from);
  }

  inline CactiInput_TechnologyParameter_InterconnectType& operator=(const CactiInput_TechnologyParameter_InterconnectType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CactiInput_TechnologyParameter_InterconnectType& operator=(CactiInput_TechnologyParameter_InterconnectType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CactiInput_TechnologyParameter_InterconnectType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CactiInput_TechnologyParameter_InterconnectType* internal_default_instance() {
    return reinterpret_cast<const CactiInput_TechnologyParameter_InterconnectType*>(
               &_CactiInput_TechnologyParameter_InterconnectType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CactiInput_TechnologyParameter_InterconnectType& a, CactiInput_TechnologyParameter_InterconnectType& b) {
    a.Swap(&b);
  }
  inline void Swap(CactiInput_TechnologyParameter_InterconnectType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CactiInput_TechnologyParameter_InterconnectType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CactiInput_TechnologyParameter_InterconnectType* New() const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter_InterconnectType>(nullptr);
  }

  CactiInput_TechnologyParameter_InterconnectType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter_InterconnectType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CactiInput_TechnologyParameter_InterconnectType& from);
  void MergeFrom(const CactiInput_TechnologyParameter_InterconnectType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CactiInput_TechnologyParameter_InterconnectType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CactiInput.TechnologyParameter.InterconnectType";
  }
  protected:
  explicit CactiInput_TechnologyParameter_InterconnectType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cacti_5finterface_2eproto);
    return ::descriptor_table_cacti_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRPerUmFieldNumber = 1,
    kRPerUmMultFieldNumber = 2,
  };
  // optional double R_per_um = 1;
  bool has_r_per_um() const;
  private:
  bool _internal_has_r_per_um() const;
  public:
  void clear_r_per_um();
  double r_per_um() const;
  void set_r_per_um(double value);
  private:
  double _internal_r_per_um() const;
  void _internal_set_r_per_um(double value);
  public:

  // optional double R_per_um_mult = 2;
  bool has_r_per_um_mult() const;
  private:
  bool _internal_has_r_per_um_mult() const;
  public:
  void clear_r_per_um_mult();
  double r_per_um_mult() const;
  void set_r_per_um_mult(double value);
  private:
  double _internal_r_per_um_mult() const;
  void _internal_set_r_per_um_mult(double value);
  public:

  // @@protoc_insertion_point(class_scope:CactiInput.TechnologyParameter.InterconnectType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double r_per_um_;
  double r_per_um_mult_;
  friend struct ::TableStruct_cacti_5finterface_2eproto;
};
// -------------------------------------------------------------------

class CactiInput_TechnologyParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CactiInput.TechnologyParameter) */ {
 public:
  inline CactiInput_TechnologyParameter() : CactiInput_TechnologyParameter(nullptr) {};
  virtual ~CactiInput_TechnologyParameter();

  CactiInput_TechnologyParameter(const CactiInput_TechnologyParameter& from);
  CactiInput_TechnologyParameter(CactiInput_TechnologyParameter&& from) noexcept
    : CactiInput_TechnologyParameter() {
    *this = ::std::move(from);
  }

  inline CactiInput_TechnologyParameter& operator=(const CactiInput_TechnologyParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CactiInput_TechnologyParameter& operator=(CactiInput_TechnologyParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CactiInput_TechnologyParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CactiInput_TechnologyParameter* internal_default_instance() {
    return reinterpret_cast<const CactiInput_TechnologyParameter*>(
               &_CactiInput_TechnologyParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CactiInput_TechnologyParameter& a, CactiInput_TechnologyParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(CactiInput_TechnologyParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CactiInput_TechnologyParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CactiInput_TechnologyParameter* New() const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter>(nullptr);
  }

  CactiInput_TechnologyParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CactiInput_TechnologyParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CactiInput_TechnologyParameter& from);
  void MergeFrom(const CactiInput_TechnologyParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CactiInput_TechnologyParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CactiInput.TechnologyParameter";
  }
  protected:
  explicit CactiInput_TechnologyParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cacti_5finterface_2eproto);
    return ::descriptor_table_cacti_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CactiInput_TechnologyParameter_DeviceType DeviceType;
  typedef CactiInput_TechnologyParameter_InterconnectType InterconnectType;

  // accessors -------------------------------------------------------

  enum : int {
    kSramCellFieldNumber = 1,
    kDramAccFieldNumber = 2,
    kDramWlFieldNumber = 3,
    kPeriGlobalFieldNumber = 4,
    kWireLocalFieldNumber = 5,
    kWireInsideMatFieldNumber = 6,
    kWireOutsideMatFieldNumber = 7,
    kVppFieldNumber = 8,
    kDramCellIOnFieldNumber = 9,
    kDramCellVddFieldNumber = 10,
    kCacheSzFieldNumber = 11,
  };
  // optional .CactiInput.TechnologyParameter.DeviceType sram_cell = 1;
  bool has_sram_cell() const;
  private:
  bool _internal_has_sram_cell() const;
  public:
  void clear_sram_cell();
  const ::CactiInput_TechnologyParameter_DeviceType& sram_cell() const;
  ::CactiInput_TechnologyParameter_DeviceType* release_sram_cell();
  ::CactiInput_TechnologyParameter_DeviceType* mutable_sram_cell();
  void set_allocated_sram_cell(::CactiInput_TechnologyParameter_DeviceType* sram_cell);
  private:
  const ::CactiInput_TechnologyParameter_DeviceType& _internal_sram_cell() const;
  ::CactiInput_TechnologyParameter_DeviceType* _internal_mutable_sram_cell();
  public:
  void unsafe_arena_set_allocated_sram_cell(
      ::CactiInput_TechnologyParameter_DeviceType* sram_cell);
  ::CactiInput_TechnologyParameter_DeviceType* unsafe_arena_release_sram_cell();

  // optional .CactiInput.TechnologyParameter.DeviceType dram_acc = 2;
  bool has_dram_acc() const;
  private:
  bool _internal_has_dram_acc() const;
  public:
  void clear_dram_acc();
  const ::CactiInput_TechnologyParameter_DeviceType& dram_acc() const;
  ::CactiInput_TechnologyParameter_DeviceType* release_dram_acc();
  ::CactiInput_TechnologyParameter_DeviceType* mutable_dram_acc();
  void set_allocated_dram_acc(::CactiInput_TechnologyParameter_DeviceType* dram_acc);
  private:
  const ::CactiInput_TechnologyParameter_DeviceType& _internal_dram_acc() const;
  ::CactiInput_TechnologyParameter_DeviceType* _internal_mutable_dram_acc();
  public:
  void unsafe_arena_set_allocated_dram_acc(
      ::CactiInput_TechnologyParameter_DeviceType* dram_acc);
  ::CactiInput_TechnologyParameter_DeviceType* unsafe_arena_release_dram_acc();

  // optional .CactiInput.TechnologyParameter.DeviceType dram_wl = 3;
  bool has_dram_wl() const;
  private:
  bool _internal_has_dram_wl() const;
  public:
  void clear_dram_wl();
  const ::CactiInput_TechnologyParameter_DeviceType& dram_wl() const;
  ::CactiInput_TechnologyParameter_DeviceType* release_dram_wl();
  ::CactiInput_TechnologyParameter_DeviceType* mutable_dram_wl();
  void set_allocated_dram_wl(::CactiInput_TechnologyParameter_DeviceType* dram_wl);
  private:
  const ::CactiInput_TechnologyParameter_DeviceType& _internal_dram_wl() const;
  ::CactiInput_TechnologyParameter_DeviceType* _internal_mutable_dram_wl();
  public:
  void unsafe_arena_set_allocated_dram_wl(
      ::CactiInput_TechnologyParameter_DeviceType* dram_wl);
  ::CactiInput_TechnologyParameter_DeviceType* unsafe_arena_release_dram_wl();

  // optional .CactiInput.TechnologyParameter.DeviceType peri_global = 4;
  bool has_peri_global() const;
  private:
  bool _internal_has_peri_global() const;
  public:
  void clear_peri_global();
  const ::CactiInput_TechnologyParameter_DeviceType& peri_global() const;
  ::CactiInput_TechnologyParameter_DeviceType* release_peri_global();
  ::CactiInput_TechnologyParameter_DeviceType* mutable_peri_global();
  void set_allocated_peri_global(::CactiInput_TechnologyParameter_DeviceType* peri_global);
  private:
  const ::CactiInput_TechnologyParameter_DeviceType& _internal_peri_global() const;
  ::CactiInput_TechnologyParameter_DeviceType* _internal_mutable_peri_global();
  public:
  void unsafe_arena_set_allocated_peri_global(
      ::CactiInput_TechnologyParameter_DeviceType* peri_global);
  ::CactiInput_TechnologyParameter_DeviceType* unsafe_arena_release_peri_global();

  // optional .CactiInput.TechnologyParameter.InterconnectType wire_local = 5;
  bool has_wire_local() const;
  private:
  bool _internal_has_wire_local() const;
  public:
  void clear_wire_local();
  const ::CactiInput_TechnologyParameter_InterconnectType& wire_local() const;
  ::CactiInput_TechnologyParameter_InterconnectType* release_wire_local();
  ::CactiInput_TechnologyParameter_InterconnectType* mutable_wire_local();
  void set_allocated_wire_local(::CactiInput_TechnologyParameter_InterconnectType* wire_local);
  private:
  const ::CactiInput_TechnologyParameter_InterconnectType& _internal_wire_local() const;
  ::CactiInput_TechnologyParameter_InterconnectType* _internal_mutable_wire_local();
  public:
  void unsafe_arena_set_allocated_wire_local(
      ::CactiInput_TechnologyParameter_InterconnectType* wire_local);
  ::CactiInput_TechnologyParameter_InterconnectType* unsafe_arena_release_wire_local();

  // optional .CactiInput.TechnologyParameter.InterconnectType wire_inside_mat = 6;
  bool has_wire_inside_mat() const;
  private:
  bool _internal_has_wire_inside_mat() const;
  public:
  void clear_wire_inside_mat();
  const ::CactiInput_TechnologyParameter_InterconnectType& wire_inside_mat() const;
  ::CactiInput_TechnologyParameter_InterconnectType* release_wire_inside_mat();
  ::CactiInput_TechnologyParameter_InterconnectType* mutable_wire_inside_mat();
  void set_allocated_wire_inside_mat(::CactiInput_TechnologyParameter_InterconnectType* wire_inside_mat);
  private:
  const ::CactiInput_TechnologyParameter_InterconnectType& _internal_wire_inside_mat() const;
  ::CactiInput_TechnologyParameter_InterconnectType* _internal_mutable_wire_inside_mat();
  public:
  void unsafe_arena_set_allocated_wire_inside_mat(
      ::CactiInput_TechnologyParameter_InterconnectType* wire_inside_mat);
  ::CactiInput_TechnologyParameter_InterconnectType* unsafe_arena_release_wire_inside_mat();

  // optional .CactiInput.TechnologyParameter.InterconnectType wire_outside_mat = 7;
  bool has_wire_outside_mat() const;
  private:
  bool _internal_has_wire_outside_mat() const;
  public:
  void clear_wire_outside_mat();
  const ::CactiInput_TechnologyParameter_InterconnectType& wire_outside_mat() const;
  ::CactiInput_TechnologyParameter_InterconnectType* release_wire_outside_mat();
  ::CactiInput_TechnologyParameter_InterconnectType* mutable_wire_outside_mat();
  void set_allocated_wire_outside_mat(::CactiInput_TechnologyParameter_InterconnectType* wire_outside_mat);
  private:
  const ::CactiInput_TechnologyParameter_InterconnectType& _internal_wire_outside_mat() const;
  ::CactiInput_TechnologyParameter_InterconnectType* _internal_mutable_wire_outside_mat();
  public:
  void unsafe_arena_set_allocated_wire_outside_mat(
      ::CactiInput_TechnologyParameter_InterconnectType* wire_outside_mat);
  ::CactiInput_TechnologyParameter_InterconnectType* unsafe_arena_release_wire_outside_mat();

  // optional double vpp = 8;
  bool has_vpp() const;
  private:
  bool _internal_has_vpp() const;
  public:
  void clear_vpp();
  double vpp() const;
  void set_vpp(double value);
  private:
  double _internal_vpp() const;
  void _internal_set_vpp(double value);
  public:

  // optional double dram_cell_I_on = 9;
  bool has_dram_cell_i_on() const;
  private:
  bool _internal_has_dram_cell_i_on() const;
  public:
  void clear_dram_cell_i_on();
  double dram_cell_i_on() const;
  void set_dram_cell_i_on(double value);
  private:
  double _internal_dram_cell_i_on() const;
  void _internal_set_dram_cell_i_on(double value);
  public:

  // optional double dram_cell_Vdd = 10;
  bool has_dram_cell_vdd() const;
  private:
  bool _internal_has_dram_cell_vdd() const;
  public:
  void clear_dram_cell_vdd();
  double dram_cell_vdd() const;
  void set_dram_cell_vdd(double value);
  private:
  double _internal_dram_cell_vdd() const;
  void _internal_set_dram_cell_vdd(double value);
  public:

  // optional int32 cache_sz = 11;
  bool has_cache_sz() const;
  private:
  bool _internal_has_cache_sz() const;
  public:
  void clear_cache_sz();
  ::PROTOBUF_NAMESPACE_ID::int32 cache_sz() const;
  void set_cache_sz(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cache_sz() const;
  void _internal_set_cache_sz(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CactiInput.TechnologyParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CactiInput_TechnologyParameter_DeviceType* sram_cell_;
  ::CactiInput_TechnologyParameter_DeviceType* dram_acc_;
  ::CactiInput_TechnologyParameter_DeviceType* dram_wl_;
  ::CactiInput_TechnologyParameter_DeviceType* peri_global_;
  ::CactiInput_TechnologyParameter_InterconnectType* wire_local_;
  ::CactiInput_TechnologyParameter_InterconnectType* wire_inside_mat_;
  ::CactiInput_TechnologyParameter_InterconnectType* wire_outside_mat_;
  double vpp_;
  double dram_cell_i_on_;
  double dram_cell_vdd_;
  ::PROTOBUF_NAMESPACE_ID::int32 cache_sz_;
  friend struct ::TableStruct_cacti_5finterface_2eproto;
};
// -------------------------------------------------------------------

class CactiInput_ConstParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CactiInput.ConstParameter) */ {
 public:
  inline CactiInput_ConstParameter() : CactiInput_ConstParameter(nullptr) {};
  virtual ~CactiInput_ConstParameter();

  CactiInput_ConstParameter(const CactiInput_ConstParameter& from);
  CactiInput_ConstParameter(CactiInput_ConstParameter&& from) noexcept
    : CactiInput_ConstParameter() {
    *this = ::std::move(from);
  }

  inline CactiInput_ConstParameter& operator=(const CactiInput_ConstParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CactiInput_ConstParameter& operator=(CactiInput_ConstParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CactiInput_ConstParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CactiInput_ConstParameter* internal_default_instance() {
    return reinterpret_cast<const CactiInput_ConstParameter*>(
               &_CactiInput_ConstParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CactiInput_ConstParameter& a, CactiInput_ConstParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(CactiInput_ConstParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CactiInput_ConstParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CactiInput_ConstParameter* New() const final {
    return CreateMaybeMessage<CactiInput_ConstParameter>(nullptr);
  }

  CactiInput_ConstParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CactiInput_ConstParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CactiInput_ConstParameter& from);
  void MergeFrom(const CactiInput_ConstParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CactiInput_ConstParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CactiInput.ConstParameter";
  }
  protected:
  explicit CactiInput_ConstParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cacti_5finterface_2eproto);
    return ::descriptor_table_cacti_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCURESISTIVITYFieldNumber = 1,
    kBULKCURESISTIVITYFieldNumber = 2,
  };
  // optional double CU_RESISTIVITY = 1;
  bool has_cu_resistivity() const;
  private:
  bool _internal_has_cu_resistivity() const;
  public:
  void clear_cu_resistivity();
  double cu_resistivity() const;
  void set_cu_resistivity(double value);
  private:
  double _internal_cu_resistivity() const;
  void _internal_set_cu_resistivity(double value);
  public:

  // optional double BULK_CU_RESISTIVITY = 2;
  bool has_bulk_cu_resistivity() const;
  private:
  bool _internal_has_bulk_cu_resistivity() const;
  public:
  void clear_bulk_cu_resistivity();
  double bulk_cu_resistivity() const;
  void set_bulk_cu_resistivity(double value);
  private:
  double _internal_bulk_cu_resistivity() const;
  void _internal_set_bulk_cu_resistivity(double value);
  public:

  // @@protoc_insertion_point(class_scope:CactiInput.ConstParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double cu_resistivity_;
  double bulk_cu_resistivity_;
  friend struct ::TableStruct_cacti_5finterface_2eproto;
};
// -------------------------------------------------------------------

class CactiInput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CactiInput) */ {
 public:
  inline CactiInput() : CactiInput(nullptr) {};
  virtual ~CactiInput();

  CactiInput(const CactiInput& from);
  CactiInput(CactiInput&& from) noexcept
    : CactiInput() {
    *this = ::std::move(from);
  }

  inline CactiInput& operator=(const CactiInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CactiInput& operator=(CactiInput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CactiInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CactiInput* internal_default_instance() {
    return reinterpret_cast<const CactiInput*>(
               &_CactiInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CactiInput& a, CactiInput& b) {
    a.Swap(&b);
  }
  inline void Swap(CactiInput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CactiInput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CactiInput* New() const final {
    return CreateMaybeMessage<CactiInput>(nullptr);
  }

  CactiInput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CactiInput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CactiInput& from);
  void MergeFrom(const CactiInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CactiInput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CactiInput";
  }
  protected:
  explicit CactiInput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cacti_5finterface_2eproto);
    return ::descriptor_table_cacti_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CactiInput_TechnologyParameter TechnologyParameter;
  typedef CactiInput_ConstParameter ConstParameter;

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFileFieldNumber = 1,
    kDynParamPrefixFieldNumber = 4,
    kWireConfigFieldNumber = 5,
    kTechParamFieldNumber = 2,
    kConstParamFieldNumber = 3,
  };
  // required string config_file = 1;
  bool has_config_file() const;
  private:
  bool _internal_has_config_file() const;
  public:
  void clear_config_file();
  const std::string& config_file() const;
  void set_config_file(const std::string& value);
  void set_config_file(std::string&& value);
  void set_config_file(const char* value);
  void set_config_file(const char* value, size_t size);
  std::string* mutable_config_file();
  std::string* release_config_file();
  void set_allocated_config_file(std::string* config_file);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_config_file();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_config_file(
      std::string* config_file);
  private:
  const std::string& _internal_config_file() const;
  void _internal_set_config_file(const std::string& value);
  std::string* _internal_mutable_config_file();
  public:

  // optional string dyn_param_prefix = 4;
  bool has_dyn_param_prefix() const;
  private:
  bool _internal_has_dyn_param_prefix() const;
  public:
  void clear_dyn_param_prefix();
  const std::string& dyn_param_prefix() const;
  void set_dyn_param_prefix(const std::string& value);
  void set_dyn_param_prefix(std::string&& value);
  void set_dyn_param_prefix(const char* value);
  void set_dyn_param_prefix(const char* value, size_t size);
  std::string* mutable_dyn_param_prefix();
  std::string* release_dyn_param_prefix();
  void set_allocated_dyn_param_prefix(std::string* dyn_param_prefix);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_dyn_param_prefix();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_dyn_param_prefix(
      std::string* dyn_param_prefix);
  private:
  const std::string& _internal_dyn_param_prefix() const;
  void _internal_set_dyn_param_prefix(const std::string& value);
  std::string* _internal_mutable_dyn_param_prefix();
  public:

  // optional string wire_config = 5;
  bool has_wire_config() const;
  private:
  bool _internal_has_wire_config() const;
  public:
  void clear_wire_config();
  const std::string& wire_config() const;
  void set_wire_config(const std::string& value);
  void set_wire_config(std::string&& value);
  void set_wire_config(const char* value);
  void set_wire_config(const char* value, size_t size);
  std::string* mutable_wire_config();
  std::string* release_wire_config();
  void set_allocated_wire_config(std::string* wire_config);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_wire_config();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_wire_config(
      std::string* wire_config);
  private:
  const std::string& _internal_wire_config() const;
  void _internal_set_wire_config(const std::string& value);
  std::string* _internal_mutable_wire_config();
  public:

  // optional .CactiInput.TechnologyParameter tech_param = 2;
  bool has_tech_param() const;
  private:
  bool _internal_has_tech_param() const;
  public:
  void clear_tech_param();
  const ::CactiInput_TechnologyParameter& tech_param() const;
  ::CactiInput_TechnologyParameter* release_tech_param();
  ::CactiInput_TechnologyParameter* mutable_tech_param();
  void set_allocated_tech_param(::CactiInput_TechnologyParameter* tech_param);
  private:
  const ::CactiInput_TechnologyParameter& _internal_tech_param() const;
  ::CactiInput_TechnologyParameter* _internal_mutable_tech_param();
  public:
  void unsafe_arena_set_allocated_tech_param(
      ::CactiInput_TechnologyParameter* tech_param);
  ::CactiInput_TechnologyParameter* unsafe_arena_release_tech_param();

  // optional .CactiInput.ConstParameter const_param = 3;
  bool has_const_param() const;
  private:
  bool _internal_has_const_param() const;
  public:
  void clear_const_param();
  const ::CactiInput_ConstParameter& const_param() const;
  ::CactiInput_ConstParameter* release_const_param();
  ::CactiInput_ConstParameter* mutable_const_param();
  void set_allocated_const_param(::CactiInput_ConstParameter* const_param);
  private:
  const ::CactiInput_ConstParameter& _internal_const_param() const;
  ::CactiInput_ConstParameter* _internal_mutable_const_param();
  public:
  void unsafe_arena_set_allocated_const_param(
      ::CactiInput_ConstParameter* const_param);
  ::CactiInput_ConstParameter* unsafe_arena_release_const_param();

  // @@protoc_insertion_point(class_scope:CactiInput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr config_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dyn_param_prefix_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wire_config_;
  ::CactiInput_TechnologyParameter* tech_param_;
  ::CactiInput_ConstParameter* const_param_;
  friend struct ::TableStruct_cacti_5finterface_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CactiInput_TechnologyParameter_DeviceType

// optional double R_nch_on = 1;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_r_nch_on() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_r_nch_on() const {
  return _internal_has_r_nch_on();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_r_nch_on() {
  r_nch_on_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_r_nch_on() const {
  return r_nch_on_;
}
inline double CactiInput_TechnologyParameter_DeviceType::r_nch_on() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.R_nch_on)
  return _internal_r_nch_on();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_r_nch_on(double value) {
  _has_bits_[0] |= 0x00000001u;
  r_nch_on_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_r_nch_on(double value) {
  _internal_set_r_nch_on(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.R_nch_on)
}

// optional double R_pch_on = 2;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_r_pch_on() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_r_pch_on() const {
  return _internal_has_r_pch_on();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_r_pch_on() {
  r_pch_on_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_r_pch_on() const {
  return r_pch_on_;
}
inline double CactiInput_TechnologyParameter_DeviceType::r_pch_on() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.R_pch_on)
  return _internal_r_pch_on();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_r_pch_on(double value) {
  _has_bits_[0] |= 0x00000002u;
  r_pch_on_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_r_pch_on(double value) {
  _internal_set_r_pch_on(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.R_pch_on)
}

// optional double Vdd = 3;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_vdd() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_vdd() const {
  return _internal_has_vdd();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_vdd() {
  vdd_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_vdd() const {
  return vdd_;
}
inline double CactiInput_TechnologyParameter_DeviceType::vdd() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.Vdd)
  return _internal_vdd();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_vdd(double value) {
  _has_bits_[0] |= 0x00000004u;
  vdd_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_vdd(double value) {
  _internal_set_vdd(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.Vdd)
}

// optional double Vth = 4;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_vth() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_vth() const {
  return _internal_has_vth();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_vth() {
  vth_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_vth() const {
  return vth_;
}
inline double CactiInput_TechnologyParameter_DeviceType::vth() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.Vth)
  return _internal_vth();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_vth(double value) {
  _has_bits_[0] |= 0x00000008u;
  vth_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_vth(double value) {
  _internal_set_vth(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.Vth)
}

// optional double Vcc_min = 5;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_vcc_min() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_vcc_min() const {
  return _internal_has_vcc_min();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_vcc_min() {
  vcc_min_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_vcc_min() const {
  return vcc_min_;
}
inline double CactiInput_TechnologyParameter_DeviceType::vcc_min() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.Vcc_min)
  return _internal_vcc_min();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_vcc_min(double value) {
  _has_bits_[0] |= 0x00000010u;
  vcc_min_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_vcc_min(double value) {
  _internal_set_vcc_min(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.Vcc_min)
}

// optional double I_on_n = 6;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_on_n() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_on_n() const {
  return _internal_has_i_on_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_on_n() {
  i_on_n_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_on_n() const {
  return i_on_n_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_on_n() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_on_n)
  return _internal_i_on_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_on_n(double value) {
  _has_bits_[0] |= 0x00000020u;
  i_on_n_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_on_n(double value) {
  _internal_set_i_on_n(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_on_n)
}

// optional double I_on_p = 7;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_on_p() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_on_p() const {
  return _internal_has_i_on_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_on_p() {
  i_on_p_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_on_p() const {
  return i_on_p_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_on_p() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_on_p)
  return _internal_i_on_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_on_p(double value) {
  _has_bits_[0] |= 0x00000040u;
  i_on_p_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_on_p(double value) {
  _internal_set_i_on_p(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_on_p)
}

// optional double I_off_n = 8;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_off_n() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_off_n() const {
  return _internal_has_i_off_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_off_n() {
  i_off_n_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_off_n() const {
  return i_off_n_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_off_n() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_off_n)
  return _internal_i_off_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_off_n(double value) {
  _has_bits_[0] |= 0x00000080u;
  i_off_n_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_off_n(double value) {
  _internal_set_i_off_n(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_off_n)
}

// optional double I_off_p = 9;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_off_p() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_off_p() const {
  return _internal_has_i_off_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_off_p() {
  i_off_p_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_off_p() const {
  return i_off_p_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_off_p() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_off_p)
  return _internal_i_off_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_off_p(double value) {
  _has_bits_[0] |= 0x00000100u;
  i_off_p_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_off_p(double value) {
  _internal_set_i_off_p(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_off_p)
}

// optional double I_g_on_n = 10;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_g_on_n() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_g_on_n() const {
  return _internal_has_i_g_on_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_g_on_n() {
  i_g_on_n_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_g_on_n() const {
  return i_g_on_n_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_g_on_n() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_g_on_n)
  return _internal_i_g_on_n();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_g_on_n(double value) {
  _has_bits_[0] |= 0x00000200u;
  i_g_on_n_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_g_on_n(double value) {
  _internal_set_i_g_on_n(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_g_on_n)
}

// optional double I_g_on_p = 11;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_i_g_on_p() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_i_g_on_p() const {
  return _internal_has_i_g_on_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_i_g_on_p() {
  i_g_on_p_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_i_g_on_p() const {
  return i_g_on_p_;
}
inline double CactiInput_TechnologyParameter_DeviceType::i_g_on_p() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.I_g_on_p)
  return _internal_i_g_on_p();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_i_g_on_p(double value) {
  _has_bits_[0] |= 0x00000400u;
  i_g_on_p_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_i_g_on_p(double value) {
  _internal_set_i_g_on_p(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.I_g_on_p)
}

// optional double n_to_p_eff_curr_drv_ratio = 12;
inline bool CactiInput_TechnologyParameter_DeviceType::_internal_has_n_to_p_eff_curr_drv_ratio() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_DeviceType::has_n_to_p_eff_curr_drv_ratio() const {
  return _internal_has_n_to_p_eff_curr_drv_ratio();
}
inline void CactiInput_TechnologyParameter_DeviceType::clear_n_to_p_eff_curr_drv_ratio() {
  n_to_p_eff_curr_drv_ratio_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double CactiInput_TechnologyParameter_DeviceType::_internal_n_to_p_eff_curr_drv_ratio() const {
  return n_to_p_eff_curr_drv_ratio_;
}
inline double CactiInput_TechnologyParameter_DeviceType::n_to_p_eff_curr_drv_ratio() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.DeviceType.n_to_p_eff_curr_drv_ratio)
  return _internal_n_to_p_eff_curr_drv_ratio();
}
inline void CactiInput_TechnologyParameter_DeviceType::_internal_set_n_to_p_eff_curr_drv_ratio(double value) {
  _has_bits_[0] |= 0x00000800u;
  n_to_p_eff_curr_drv_ratio_ = value;
}
inline void CactiInput_TechnologyParameter_DeviceType::set_n_to_p_eff_curr_drv_ratio(double value) {
  _internal_set_n_to_p_eff_curr_drv_ratio(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.DeviceType.n_to_p_eff_curr_drv_ratio)
}

// -------------------------------------------------------------------

// CactiInput_TechnologyParameter_InterconnectType

// optional double R_per_um = 1;
inline bool CactiInput_TechnologyParameter_InterconnectType::_internal_has_r_per_um() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_InterconnectType::has_r_per_um() const {
  return _internal_has_r_per_um();
}
inline void CactiInput_TechnologyParameter_InterconnectType::clear_r_per_um() {
  r_per_um_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double CactiInput_TechnologyParameter_InterconnectType::_internal_r_per_um() const {
  return r_per_um_;
}
inline double CactiInput_TechnologyParameter_InterconnectType::r_per_um() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.InterconnectType.R_per_um)
  return _internal_r_per_um();
}
inline void CactiInput_TechnologyParameter_InterconnectType::_internal_set_r_per_um(double value) {
  _has_bits_[0] |= 0x00000001u;
  r_per_um_ = value;
}
inline void CactiInput_TechnologyParameter_InterconnectType::set_r_per_um(double value) {
  _internal_set_r_per_um(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.InterconnectType.R_per_um)
}

// optional double R_per_um_mult = 2;
inline bool CactiInput_TechnologyParameter_InterconnectType::_internal_has_r_per_um_mult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter_InterconnectType::has_r_per_um_mult() const {
  return _internal_has_r_per_um_mult();
}
inline void CactiInput_TechnologyParameter_InterconnectType::clear_r_per_um_mult() {
  r_per_um_mult_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double CactiInput_TechnologyParameter_InterconnectType::_internal_r_per_um_mult() const {
  return r_per_um_mult_;
}
inline double CactiInput_TechnologyParameter_InterconnectType::r_per_um_mult() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.InterconnectType.R_per_um_mult)
  return _internal_r_per_um_mult();
}
inline void CactiInput_TechnologyParameter_InterconnectType::_internal_set_r_per_um_mult(double value) {
  _has_bits_[0] |= 0x00000002u;
  r_per_um_mult_ = value;
}
inline void CactiInput_TechnologyParameter_InterconnectType::set_r_per_um_mult(double value) {
  _internal_set_r_per_um_mult(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.InterconnectType.R_per_um_mult)
}

// -------------------------------------------------------------------

// CactiInput_TechnologyParameter

// optional .CactiInput.TechnologyParameter.DeviceType sram_cell = 1;
inline bool CactiInput_TechnologyParameter::_internal_has_sram_cell() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || sram_cell_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_sram_cell() const {
  return _internal_has_sram_cell();
}
inline void CactiInput_TechnologyParameter::clear_sram_cell() {
  if (sram_cell_ != nullptr) sram_cell_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::_internal_sram_cell() const {
  const ::CactiInput_TechnologyParameter_DeviceType* p = sram_cell_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_DeviceType*>(
      &::_CactiInput_TechnologyParameter_DeviceType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::sram_cell() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.sram_cell)
  return _internal_sram_cell();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_sram_cell(
    ::CactiInput_TechnologyParameter_DeviceType* sram_cell) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sram_cell_);
  }
  sram_cell_ = sram_cell;
  if (sram_cell) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.sram_cell)
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::release_sram_cell() {
  auto temp = unsafe_arena_release_sram_cell();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::unsafe_arena_release_sram_cell() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.sram_cell)
  _has_bits_[0] &= ~0x00000001u;
  ::CactiInput_TechnologyParameter_DeviceType* temp = sram_cell_;
  sram_cell_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::_internal_mutable_sram_cell() {
  _has_bits_[0] |= 0x00000001u;
  if (sram_cell_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_DeviceType>(GetArena());
    sram_cell_ = p;
  }
  return sram_cell_;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::mutable_sram_cell() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.sram_cell)
  return _internal_mutable_sram_cell();
}
inline void CactiInput_TechnologyParameter::set_allocated_sram_cell(::CactiInput_TechnologyParameter_DeviceType* sram_cell) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sram_cell_;
  }
  if (sram_cell) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sram_cell);
    if (message_arena != submessage_arena) {
      sram_cell = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sram_cell, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sram_cell_ = sram_cell;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.sram_cell)
}

// optional .CactiInput.TechnologyParameter.DeviceType dram_acc = 2;
inline bool CactiInput_TechnologyParameter::_internal_has_dram_acc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || dram_acc_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_dram_acc() const {
  return _internal_has_dram_acc();
}
inline void CactiInput_TechnologyParameter::clear_dram_acc() {
  if (dram_acc_ != nullptr) dram_acc_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::_internal_dram_acc() const {
  const ::CactiInput_TechnologyParameter_DeviceType* p = dram_acc_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_DeviceType*>(
      &::_CactiInput_TechnologyParameter_DeviceType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::dram_acc() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.dram_acc)
  return _internal_dram_acc();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_dram_acc(
    ::CactiInput_TechnologyParameter_DeviceType* dram_acc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dram_acc_);
  }
  dram_acc_ = dram_acc;
  if (dram_acc) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.dram_acc)
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::release_dram_acc() {
  auto temp = unsafe_arena_release_dram_acc();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::unsafe_arena_release_dram_acc() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.dram_acc)
  _has_bits_[0] &= ~0x00000002u;
  ::CactiInput_TechnologyParameter_DeviceType* temp = dram_acc_;
  dram_acc_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::_internal_mutable_dram_acc() {
  _has_bits_[0] |= 0x00000002u;
  if (dram_acc_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_DeviceType>(GetArena());
    dram_acc_ = p;
  }
  return dram_acc_;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::mutable_dram_acc() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.dram_acc)
  return _internal_mutable_dram_acc();
}
inline void CactiInput_TechnologyParameter::set_allocated_dram_acc(::CactiInput_TechnologyParameter_DeviceType* dram_acc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dram_acc_;
  }
  if (dram_acc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dram_acc);
    if (message_arena != submessage_arena) {
      dram_acc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dram_acc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dram_acc_ = dram_acc;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.dram_acc)
}

// optional .CactiInput.TechnologyParameter.DeviceType dram_wl = 3;
inline bool CactiInput_TechnologyParameter::_internal_has_dram_wl() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || dram_wl_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_dram_wl() const {
  return _internal_has_dram_wl();
}
inline void CactiInput_TechnologyParameter::clear_dram_wl() {
  if (dram_wl_ != nullptr) dram_wl_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::_internal_dram_wl() const {
  const ::CactiInput_TechnologyParameter_DeviceType* p = dram_wl_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_DeviceType*>(
      &::_CactiInput_TechnologyParameter_DeviceType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::dram_wl() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.dram_wl)
  return _internal_dram_wl();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_dram_wl(
    ::CactiInput_TechnologyParameter_DeviceType* dram_wl) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dram_wl_);
  }
  dram_wl_ = dram_wl;
  if (dram_wl) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.dram_wl)
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::release_dram_wl() {
  auto temp = unsafe_arena_release_dram_wl();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::unsafe_arena_release_dram_wl() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.dram_wl)
  _has_bits_[0] &= ~0x00000004u;
  ::CactiInput_TechnologyParameter_DeviceType* temp = dram_wl_;
  dram_wl_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::_internal_mutable_dram_wl() {
  _has_bits_[0] |= 0x00000004u;
  if (dram_wl_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_DeviceType>(GetArena());
    dram_wl_ = p;
  }
  return dram_wl_;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::mutable_dram_wl() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.dram_wl)
  return _internal_mutable_dram_wl();
}
inline void CactiInput_TechnologyParameter::set_allocated_dram_wl(::CactiInput_TechnologyParameter_DeviceType* dram_wl) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dram_wl_;
  }
  if (dram_wl) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dram_wl);
    if (message_arena != submessage_arena) {
      dram_wl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dram_wl, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  dram_wl_ = dram_wl;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.dram_wl)
}

// optional .CactiInput.TechnologyParameter.DeviceType peri_global = 4;
inline bool CactiInput_TechnologyParameter::_internal_has_peri_global() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || peri_global_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_peri_global() const {
  return _internal_has_peri_global();
}
inline void CactiInput_TechnologyParameter::clear_peri_global() {
  if (peri_global_ != nullptr) peri_global_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::_internal_peri_global() const {
  const ::CactiInput_TechnologyParameter_DeviceType* p = peri_global_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_DeviceType*>(
      &::_CactiInput_TechnologyParameter_DeviceType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_DeviceType& CactiInput_TechnologyParameter::peri_global() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.peri_global)
  return _internal_peri_global();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_peri_global(
    ::CactiInput_TechnologyParameter_DeviceType* peri_global) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(peri_global_);
  }
  peri_global_ = peri_global;
  if (peri_global) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.peri_global)
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::release_peri_global() {
  auto temp = unsafe_arena_release_peri_global();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::unsafe_arena_release_peri_global() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.peri_global)
  _has_bits_[0] &= ~0x00000008u;
  ::CactiInput_TechnologyParameter_DeviceType* temp = peri_global_;
  peri_global_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::_internal_mutable_peri_global() {
  _has_bits_[0] |= 0x00000008u;
  if (peri_global_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_DeviceType>(GetArena());
    peri_global_ = p;
  }
  return peri_global_;
}
inline ::CactiInput_TechnologyParameter_DeviceType* CactiInput_TechnologyParameter::mutable_peri_global() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.peri_global)
  return _internal_mutable_peri_global();
}
inline void CactiInput_TechnologyParameter::set_allocated_peri_global(::CactiInput_TechnologyParameter_DeviceType* peri_global) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete peri_global_;
  }
  if (peri_global) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(peri_global);
    if (message_arena != submessage_arena) {
      peri_global = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, peri_global, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  peri_global_ = peri_global;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.peri_global)
}

// optional .CactiInput.TechnologyParameter.InterconnectType wire_local = 5;
inline bool CactiInput_TechnologyParameter::_internal_has_wire_local() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || wire_local_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_wire_local() const {
  return _internal_has_wire_local();
}
inline void CactiInput_TechnologyParameter::clear_wire_local() {
  if (wire_local_ != nullptr) wire_local_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::_internal_wire_local() const {
  const ::CactiInput_TechnologyParameter_InterconnectType* p = wire_local_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_InterconnectType*>(
      &::_CactiInput_TechnologyParameter_InterconnectType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::wire_local() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.wire_local)
  return _internal_wire_local();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_wire_local(
    ::CactiInput_TechnologyParameter_InterconnectType* wire_local) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wire_local_);
  }
  wire_local_ = wire_local;
  if (wire_local) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.wire_local)
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::release_wire_local() {
  auto temp = unsafe_arena_release_wire_local();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::unsafe_arena_release_wire_local() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.wire_local)
  _has_bits_[0] &= ~0x00000010u;
  ::CactiInput_TechnologyParameter_InterconnectType* temp = wire_local_;
  wire_local_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::_internal_mutable_wire_local() {
  _has_bits_[0] |= 0x00000010u;
  if (wire_local_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_InterconnectType>(GetArena());
    wire_local_ = p;
  }
  return wire_local_;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::mutable_wire_local() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.wire_local)
  return _internal_mutable_wire_local();
}
inline void CactiInput_TechnologyParameter::set_allocated_wire_local(::CactiInput_TechnologyParameter_InterconnectType* wire_local) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete wire_local_;
  }
  if (wire_local) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(wire_local);
    if (message_arena != submessage_arena) {
      wire_local = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wire_local, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  wire_local_ = wire_local;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.wire_local)
}

// optional .CactiInput.TechnologyParameter.InterconnectType wire_inside_mat = 6;
inline bool CactiInput_TechnologyParameter::_internal_has_wire_inside_mat() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || wire_inside_mat_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_wire_inside_mat() const {
  return _internal_has_wire_inside_mat();
}
inline void CactiInput_TechnologyParameter::clear_wire_inside_mat() {
  if (wire_inside_mat_ != nullptr) wire_inside_mat_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::_internal_wire_inside_mat() const {
  const ::CactiInput_TechnologyParameter_InterconnectType* p = wire_inside_mat_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_InterconnectType*>(
      &::_CactiInput_TechnologyParameter_InterconnectType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::wire_inside_mat() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.wire_inside_mat)
  return _internal_wire_inside_mat();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_wire_inside_mat(
    ::CactiInput_TechnologyParameter_InterconnectType* wire_inside_mat) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wire_inside_mat_);
  }
  wire_inside_mat_ = wire_inside_mat;
  if (wire_inside_mat) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.wire_inside_mat)
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::release_wire_inside_mat() {
  auto temp = unsafe_arena_release_wire_inside_mat();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::unsafe_arena_release_wire_inside_mat() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.wire_inside_mat)
  _has_bits_[0] &= ~0x00000020u;
  ::CactiInput_TechnologyParameter_InterconnectType* temp = wire_inside_mat_;
  wire_inside_mat_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::_internal_mutable_wire_inside_mat() {
  _has_bits_[0] |= 0x00000020u;
  if (wire_inside_mat_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_InterconnectType>(GetArena());
    wire_inside_mat_ = p;
  }
  return wire_inside_mat_;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::mutable_wire_inside_mat() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.wire_inside_mat)
  return _internal_mutable_wire_inside_mat();
}
inline void CactiInput_TechnologyParameter::set_allocated_wire_inside_mat(::CactiInput_TechnologyParameter_InterconnectType* wire_inside_mat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete wire_inside_mat_;
  }
  if (wire_inside_mat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(wire_inside_mat);
    if (message_arena != submessage_arena) {
      wire_inside_mat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wire_inside_mat, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  wire_inside_mat_ = wire_inside_mat;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.wire_inside_mat)
}

// optional .CactiInput.TechnologyParameter.InterconnectType wire_outside_mat = 7;
inline bool CactiInput_TechnologyParameter::_internal_has_wire_outside_mat() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || wire_outside_mat_ != nullptr);
  return value;
}
inline bool CactiInput_TechnologyParameter::has_wire_outside_mat() const {
  return _internal_has_wire_outside_mat();
}
inline void CactiInput_TechnologyParameter::clear_wire_outside_mat() {
  if (wire_outside_mat_ != nullptr) wire_outside_mat_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::_internal_wire_outside_mat() const {
  const ::CactiInput_TechnologyParameter_InterconnectType* p = wire_outside_mat_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter_InterconnectType*>(
      &::_CactiInput_TechnologyParameter_InterconnectType_default_instance_);
}
inline const ::CactiInput_TechnologyParameter_InterconnectType& CactiInput_TechnologyParameter::wire_outside_mat() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.wire_outside_mat)
  return _internal_wire_outside_mat();
}
inline void CactiInput_TechnologyParameter::unsafe_arena_set_allocated_wire_outside_mat(
    ::CactiInput_TechnologyParameter_InterconnectType* wire_outside_mat) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wire_outside_mat_);
  }
  wire_outside_mat_ = wire_outside_mat;
  if (wire_outside_mat) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.TechnologyParameter.wire_outside_mat)
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::release_wire_outside_mat() {
  auto temp = unsafe_arena_release_wire_outside_mat();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::unsafe_arena_release_wire_outside_mat() {
  // @@protoc_insertion_point(field_release:CactiInput.TechnologyParameter.wire_outside_mat)
  _has_bits_[0] &= ~0x00000040u;
  ::CactiInput_TechnologyParameter_InterconnectType* temp = wire_outside_mat_;
  wire_outside_mat_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::_internal_mutable_wire_outside_mat() {
  _has_bits_[0] |= 0x00000040u;
  if (wire_outside_mat_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter_InterconnectType>(GetArena());
    wire_outside_mat_ = p;
  }
  return wire_outside_mat_;
}
inline ::CactiInput_TechnologyParameter_InterconnectType* CactiInput_TechnologyParameter::mutable_wire_outside_mat() {
  // @@protoc_insertion_point(field_mutable:CactiInput.TechnologyParameter.wire_outside_mat)
  return _internal_mutable_wire_outside_mat();
}
inline void CactiInput_TechnologyParameter::set_allocated_wire_outside_mat(::CactiInput_TechnologyParameter_InterconnectType* wire_outside_mat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete wire_outside_mat_;
  }
  if (wire_outside_mat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(wire_outside_mat);
    if (message_arena != submessage_arena) {
      wire_outside_mat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wire_outside_mat, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  wire_outside_mat_ = wire_outside_mat;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.TechnologyParameter.wire_outside_mat)
}

// optional double vpp = 8;
inline bool CactiInput_TechnologyParameter::_internal_has_vpp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter::has_vpp() const {
  return _internal_has_vpp();
}
inline void CactiInput_TechnologyParameter::clear_vpp() {
  vpp_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double CactiInput_TechnologyParameter::_internal_vpp() const {
  return vpp_;
}
inline double CactiInput_TechnologyParameter::vpp() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.vpp)
  return _internal_vpp();
}
inline void CactiInput_TechnologyParameter::_internal_set_vpp(double value) {
  _has_bits_[0] |= 0x00000080u;
  vpp_ = value;
}
inline void CactiInput_TechnologyParameter::set_vpp(double value) {
  _internal_set_vpp(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.vpp)
}

// optional double dram_cell_I_on = 9;
inline bool CactiInput_TechnologyParameter::_internal_has_dram_cell_i_on() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter::has_dram_cell_i_on() const {
  return _internal_has_dram_cell_i_on();
}
inline void CactiInput_TechnologyParameter::clear_dram_cell_i_on() {
  dram_cell_i_on_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double CactiInput_TechnologyParameter::_internal_dram_cell_i_on() const {
  return dram_cell_i_on_;
}
inline double CactiInput_TechnologyParameter::dram_cell_i_on() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.dram_cell_I_on)
  return _internal_dram_cell_i_on();
}
inline void CactiInput_TechnologyParameter::_internal_set_dram_cell_i_on(double value) {
  _has_bits_[0] |= 0x00000100u;
  dram_cell_i_on_ = value;
}
inline void CactiInput_TechnologyParameter::set_dram_cell_i_on(double value) {
  _internal_set_dram_cell_i_on(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.dram_cell_I_on)
}

// optional double dram_cell_Vdd = 10;
inline bool CactiInput_TechnologyParameter::_internal_has_dram_cell_vdd() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter::has_dram_cell_vdd() const {
  return _internal_has_dram_cell_vdd();
}
inline void CactiInput_TechnologyParameter::clear_dram_cell_vdd() {
  dram_cell_vdd_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double CactiInput_TechnologyParameter::_internal_dram_cell_vdd() const {
  return dram_cell_vdd_;
}
inline double CactiInput_TechnologyParameter::dram_cell_vdd() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.dram_cell_Vdd)
  return _internal_dram_cell_vdd();
}
inline void CactiInput_TechnologyParameter::_internal_set_dram_cell_vdd(double value) {
  _has_bits_[0] |= 0x00000200u;
  dram_cell_vdd_ = value;
}
inline void CactiInput_TechnologyParameter::set_dram_cell_vdd(double value) {
  _internal_set_dram_cell_vdd(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.dram_cell_Vdd)
}

// optional int32 cache_sz = 11;
inline bool CactiInput_TechnologyParameter::_internal_has_cache_sz() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CactiInput_TechnologyParameter::has_cache_sz() const {
  return _internal_has_cache_sz();
}
inline void CactiInput_TechnologyParameter::clear_cache_sz() {
  cache_sz_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CactiInput_TechnologyParameter::_internal_cache_sz() const {
  return cache_sz_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CactiInput_TechnologyParameter::cache_sz() const {
  // @@protoc_insertion_point(field_get:CactiInput.TechnologyParameter.cache_sz)
  return _internal_cache_sz();
}
inline void CactiInput_TechnologyParameter::_internal_set_cache_sz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  cache_sz_ = value;
}
inline void CactiInput_TechnologyParameter::set_cache_sz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cache_sz(value);
  // @@protoc_insertion_point(field_set:CactiInput.TechnologyParameter.cache_sz)
}

// -------------------------------------------------------------------

// CactiInput_ConstParameter

// optional double CU_RESISTIVITY = 1;
inline bool CactiInput_ConstParameter::_internal_has_cu_resistivity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CactiInput_ConstParameter::has_cu_resistivity() const {
  return _internal_has_cu_resistivity();
}
inline void CactiInput_ConstParameter::clear_cu_resistivity() {
  cu_resistivity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double CactiInput_ConstParameter::_internal_cu_resistivity() const {
  return cu_resistivity_;
}
inline double CactiInput_ConstParameter::cu_resistivity() const {
  // @@protoc_insertion_point(field_get:CactiInput.ConstParameter.CU_RESISTIVITY)
  return _internal_cu_resistivity();
}
inline void CactiInput_ConstParameter::_internal_set_cu_resistivity(double value) {
  _has_bits_[0] |= 0x00000001u;
  cu_resistivity_ = value;
}
inline void CactiInput_ConstParameter::set_cu_resistivity(double value) {
  _internal_set_cu_resistivity(value);
  // @@protoc_insertion_point(field_set:CactiInput.ConstParameter.CU_RESISTIVITY)
}

// optional double BULK_CU_RESISTIVITY = 2;
inline bool CactiInput_ConstParameter::_internal_has_bulk_cu_resistivity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CactiInput_ConstParameter::has_bulk_cu_resistivity() const {
  return _internal_has_bulk_cu_resistivity();
}
inline void CactiInput_ConstParameter::clear_bulk_cu_resistivity() {
  bulk_cu_resistivity_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double CactiInput_ConstParameter::_internal_bulk_cu_resistivity() const {
  return bulk_cu_resistivity_;
}
inline double CactiInput_ConstParameter::bulk_cu_resistivity() const {
  // @@protoc_insertion_point(field_get:CactiInput.ConstParameter.BULK_CU_RESISTIVITY)
  return _internal_bulk_cu_resistivity();
}
inline void CactiInput_ConstParameter::_internal_set_bulk_cu_resistivity(double value) {
  _has_bits_[0] |= 0x00000002u;
  bulk_cu_resistivity_ = value;
}
inline void CactiInput_ConstParameter::set_bulk_cu_resistivity(double value) {
  _internal_set_bulk_cu_resistivity(value);
  // @@protoc_insertion_point(field_set:CactiInput.ConstParameter.BULK_CU_RESISTIVITY)
}

// -------------------------------------------------------------------

// CactiInput

// required string config_file = 1;
inline bool CactiInput::_internal_has_config_file() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CactiInput::has_config_file() const {
  return _internal_has_config_file();
}
inline void CactiInput::clear_config_file() {
  config_file_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CactiInput::config_file() const {
  // @@protoc_insertion_point(field_get:CactiInput.config_file)
  return _internal_config_file();
}
inline void CactiInput::set_config_file(const std::string& value) {
  _internal_set_config_file(value);
  // @@protoc_insertion_point(field_set:CactiInput.config_file)
}
inline std::string* CactiInput::mutable_config_file() {
  // @@protoc_insertion_point(field_mutable:CactiInput.config_file)
  return _internal_mutable_config_file();
}
inline const std::string& CactiInput::_internal_config_file() const {
  return config_file_.Get();
}
inline void CactiInput::_internal_set_config_file(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  config_file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CactiInput::set_config_file(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  config_file_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CactiInput.config_file)
}
inline void CactiInput::set_config_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  config_file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:CactiInput.config_file)
}
inline void CactiInput::set_config_file(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  config_file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CactiInput.config_file)
}
inline std::string* CactiInput::_internal_mutable_config_file() {
  _has_bits_[0] |= 0x00000001u;
  return config_file_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CactiInput::release_config_file() {
  // @@protoc_insertion_point(field_release:CactiInput.config_file)
  if (!_internal_has_config_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return config_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CactiInput::set_allocated_config_file(std::string* config_file) {
  if (config_file != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), config_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CactiInput.config_file)
}
inline std::string* CactiInput::unsafe_arena_release_config_file() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CactiInput.config_file)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return config_file_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CactiInput::unsafe_arena_set_allocated_config_file(
    std::string* config_file) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (config_file != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_file_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      config_file, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.config_file)
}

// optional .CactiInput.TechnologyParameter tech_param = 2;
inline bool CactiInput::_internal_has_tech_param() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || tech_param_ != nullptr);
  return value;
}
inline bool CactiInput::has_tech_param() const {
  return _internal_has_tech_param();
}
inline void CactiInput::clear_tech_param() {
  if (tech_param_ != nullptr) tech_param_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CactiInput_TechnologyParameter& CactiInput::_internal_tech_param() const {
  const ::CactiInput_TechnologyParameter* p = tech_param_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_TechnologyParameter*>(
      &::_CactiInput_TechnologyParameter_default_instance_);
}
inline const ::CactiInput_TechnologyParameter& CactiInput::tech_param() const {
  // @@protoc_insertion_point(field_get:CactiInput.tech_param)
  return _internal_tech_param();
}
inline void CactiInput::unsafe_arena_set_allocated_tech_param(
    ::CactiInput_TechnologyParameter* tech_param) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tech_param_);
  }
  tech_param_ = tech_param;
  if (tech_param) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.tech_param)
}
inline ::CactiInput_TechnologyParameter* CactiInput::release_tech_param() {
  auto temp = unsafe_arena_release_tech_param();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_TechnologyParameter* CactiInput::unsafe_arena_release_tech_param() {
  // @@protoc_insertion_point(field_release:CactiInput.tech_param)
  _has_bits_[0] &= ~0x00000008u;
  ::CactiInput_TechnologyParameter* temp = tech_param_;
  tech_param_ = nullptr;
  return temp;
}
inline ::CactiInput_TechnologyParameter* CactiInput::_internal_mutable_tech_param() {
  _has_bits_[0] |= 0x00000008u;
  if (tech_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_TechnologyParameter>(GetArena());
    tech_param_ = p;
  }
  return tech_param_;
}
inline ::CactiInput_TechnologyParameter* CactiInput::mutable_tech_param() {
  // @@protoc_insertion_point(field_mutable:CactiInput.tech_param)
  return _internal_mutable_tech_param();
}
inline void CactiInput::set_allocated_tech_param(::CactiInput_TechnologyParameter* tech_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete tech_param_;
  }
  if (tech_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tech_param);
    if (message_arena != submessage_arena) {
      tech_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tech_param, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  tech_param_ = tech_param;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.tech_param)
}

// optional .CactiInput.ConstParameter const_param = 3;
inline bool CactiInput::_internal_has_const_param() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || const_param_ != nullptr);
  return value;
}
inline bool CactiInput::has_const_param() const {
  return _internal_has_const_param();
}
inline void CactiInput::clear_const_param() {
  if (const_param_ != nullptr) const_param_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::CactiInput_ConstParameter& CactiInput::_internal_const_param() const {
  const ::CactiInput_ConstParameter* p = const_param_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CactiInput_ConstParameter*>(
      &::_CactiInput_ConstParameter_default_instance_);
}
inline const ::CactiInput_ConstParameter& CactiInput::const_param() const {
  // @@protoc_insertion_point(field_get:CactiInput.const_param)
  return _internal_const_param();
}
inline void CactiInput::unsafe_arena_set_allocated_const_param(
    ::CactiInput_ConstParameter* const_param) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(const_param_);
  }
  const_param_ = const_param;
  if (const_param) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.const_param)
}
inline ::CactiInput_ConstParameter* CactiInput::release_const_param() {
  auto temp = unsafe_arena_release_const_param();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CactiInput_ConstParameter* CactiInput::unsafe_arena_release_const_param() {
  // @@protoc_insertion_point(field_release:CactiInput.const_param)
  _has_bits_[0] &= ~0x00000010u;
  ::CactiInput_ConstParameter* temp = const_param_;
  const_param_ = nullptr;
  return temp;
}
inline ::CactiInput_ConstParameter* CactiInput::_internal_mutable_const_param() {
  _has_bits_[0] |= 0x00000010u;
  if (const_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::CactiInput_ConstParameter>(GetArena());
    const_param_ = p;
  }
  return const_param_;
}
inline ::CactiInput_ConstParameter* CactiInput::mutable_const_param() {
  // @@protoc_insertion_point(field_mutable:CactiInput.const_param)
  return _internal_mutable_const_param();
}
inline void CactiInput::set_allocated_const_param(::CactiInput_ConstParameter* const_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete const_param_;
  }
  if (const_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(const_param);
    if (message_arena != submessage_arena) {
      const_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, const_param, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  const_param_ = const_param;
  // @@protoc_insertion_point(field_set_allocated:CactiInput.const_param)
}

// optional string dyn_param_prefix = 4;
inline bool CactiInput::_internal_has_dyn_param_prefix() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CactiInput::has_dyn_param_prefix() const {
  return _internal_has_dyn_param_prefix();
}
inline void CactiInput::clear_dyn_param_prefix() {
  dyn_param_prefix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CactiInput::dyn_param_prefix() const {
  // @@protoc_insertion_point(field_get:CactiInput.dyn_param_prefix)
  return _internal_dyn_param_prefix();
}
inline void CactiInput::set_dyn_param_prefix(const std::string& value) {
  _internal_set_dyn_param_prefix(value);
  // @@protoc_insertion_point(field_set:CactiInput.dyn_param_prefix)
}
inline std::string* CactiInput::mutable_dyn_param_prefix() {
  // @@protoc_insertion_point(field_mutable:CactiInput.dyn_param_prefix)
  return _internal_mutable_dyn_param_prefix();
}
inline const std::string& CactiInput::_internal_dyn_param_prefix() const {
  return dyn_param_prefix_.Get();
}
inline void CactiInput::_internal_set_dyn_param_prefix(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  dyn_param_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CactiInput::set_dyn_param_prefix(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  dyn_param_prefix_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CactiInput.dyn_param_prefix)
}
inline void CactiInput::set_dyn_param_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  dyn_param_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:CactiInput.dyn_param_prefix)
}
inline void CactiInput::set_dyn_param_prefix(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  dyn_param_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CactiInput.dyn_param_prefix)
}
inline std::string* CactiInput::_internal_mutable_dyn_param_prefix() {
  _has_bits_[0] |= 0x00000002u;
  return dyn_param_prefix_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CactiInput::release_dyn_param_prefix() {
  // @@protoc_insertion_point(field_release:CactiInput.dyn_param_prefix)
  if (!_internal_has_dyn_param_prefix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return dyn_param_prefix_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CactiInput::set_allocated_dyn_param_prefix(std::string* dyn_param_prefix) {
  if (dyn_param_prefix != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dyn_param_prefix_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dyn_param_prefix,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CactiInput.dyn_param_prefix)
}
inline std::string* CactiInput::unsafe_arena_release_dyn_param_prefix() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CactiInput.dyn_param_prefix)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return dyn_param_prefix_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CactiInput::unsafe_arena_set_allocated_dyn_param_prefix(
    std::string* dyn_param_prefix) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (dyn_param_prefix != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dyn_param_prefix_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      dyn_param_prefix, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.dyn_param_prefix)
}

// optional string wire_config = 5;
inline bool CactiInput::_internal_has_wire_config() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CactiInput::has_wire_config() const {
  return _internal_has_wire_config();
}
inline void CactiInput::clear_wire_config() {
  wire_config_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CactiInput::wire_config() const {
  // @@protoc_insertion_point(field_get:CactiInput.wire_config)
  return _internal_wire_config();
}
inline void CactiInput::set_wire_config(const std::string& value) {
  _internal_set_wire_config(value);
  // @@protoc_insertion_point(field_set:CactiInput.wire_config)
}
inline std::string* CactiInput::mutable_wire_config() {
  // @@protoc_insertion_point(field_mutable:CactiInput.wire_config)
  return _internal_mutable_wire_config();
}
inline const std::string& CactiInput::_internal_wire_config() const {
  return wire_config_.Get();
}
inline void CactiInput::_internal_set_wire_config(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  wire_config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CactiInput::set_wire_config(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  wire_config_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CactiInput.wire_config)
}
inline void CactiInput::set_wire_config(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  wire_config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:CactiInput.wire_config)
}
inline void CactiInput::set_wire_config(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  wire_config_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CactiInput.wire_config)
}
inline std::string* CactiInput::_internal_mutable_wire_config() {
  _has_bits_[0] |= 0x00000004u;
  return wire_config_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CactiInput::release_wire_config() {
  // @@protoc_insertion_point(field_release:CactiInput.wire_config)
  if (!_internal_has_wire_config()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return wire_config_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CactiInput::set_allocated_wire_config(std::string* wire_config) {
  if (wire_config != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  wire_config_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wire_config,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CactiInput.wire_config)
}
inline std::string* CactiInput::unsafe_arena_release_wire_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CactiInput.wire_config)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return wire_config_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CactiInput::unsafe_arena_set_allocated_wire_config(
    std::string* wire_config) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (wire_config != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  wire_config_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      wire_config, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CactiInput.wire_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cacti_5finterface_2eproto
